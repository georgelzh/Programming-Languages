Object subclass: #MyDate	instanceVariableNames: 'month day year'	classVariableNames: ''	poolDictionaries: ''	category: 'Date_Class'!!MyDate methodsFor: 'accessing' stamp: 'onetime 10/27/2019 15:06'!day	^ day! !!MyDate methodsFor: 'accessing' stamp: 'onetime 10/27/2019 15:06'!day: anObject	day := anObject.! !!MyDate methodsFor: 'accessing' stamp: 'onetime 10/27/2019 15:06'!month	^ month! !!MyDate methodsFor: 'accessing' stamp: 'onetime 10/27/2019 15:06'!month: anObject	month := anObject.! !!MyDate methodsFor: 'accessing' stamp: 'onetime 10/27/2019 15:06'!year	^ year! !!MyDate methodsFor: 'accessing' stamp: 'onetime 10/27/2019 15:06'!year: anObject	year := anObject.! !!MyDate methodsFor: 'as yet unclassified' stamp: 'onetime 10/27/2019 15:08'!initialize	"initialize the date."	super initialize.	self month:1.	self day:1.	self year:1900.	! !!MyDate methodsFor: 'as yet unclassified' stamp: 'onetime 10/27/2019 15:27'!printString	"print out the date in the form of mm/dd/yyyy"	| month |	month:=""		self month = 1		ifTrue:[month:= 'January'].	self month = 2		ifTrue:[month:= 'Feburary'].	self month = 3		ifTrue:[month:= 'March'].	self month = 4		ifTrue:[month:= 'April'].	self month = 5		ifTrue:[month:= 'May'].	self month = 6		ifTrue:[month:= 'June'].	self month = 7		ifTrue:[month:= 'July'].	self month = 8		ifTrue:[month:= 'August'].	self month = 9		ifTrue:[month:= 'September'].	self month = 10		ifTrue:[month:= 'October'].	self month = 11		ifTrue:[month:= 'November'].	self month = 12		ifTrue:[month:= 'December'].	Transcript show: '',month, ' ', (self day), ' , ', (self year);cr.	! !!MyDate methodsFor: 'as yet unclassified' stamp: 'onetime 10/27/2019 15:29'!setMonth: month day: day year: year	"make sure the date is valid and set the date"		"if the input month is valid, set it up."	(month isInteger) & (month > 0) & (month <= 12) 		ifTrue:[self month: month]		ifFalse:[Transcript show: 'please enter correct month!!';cr.].			"if the input day is valid, set it up"	(day isInteger) & (day > 0) & (day <= 31) 		ifTrue:[self day: day]		ifFalse:[Transcript show: 'please enter correct day!!';cr.].	"if the input year is valid, set it up"	(year isInteger) & (year > 0) 		ifTrue:[self year: year]		ifFalse:[Transcript show: 'please enter correct year!!';cr.].			"eg:	date:= MyDate new.	date setMonth: 2 day:1 year: 1998.	date printString"	! !